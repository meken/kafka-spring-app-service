{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": {
      "type": "string",
      "minLength": 2,
      "maxLength": 6
    },
    "imageName": {
      "type": "string"
    }
  },
  "variables": {
    "suffix": "[toLower(substring(concat(parameters('baseName'), uniqueString(resourceGroup().id)), 0, 8))]",
    "webAppName": "[variables('suffix')]",
    "registryName": "[concat('acr', variables('suffix'))]",
    "serviceBusName": "[concat('sb-', variables('suffix'))]",
    "keyVaultName": "[concat('kv-', variables('suffix'))]",
    "hostingPlanName": "[concat('asp-', variables('suffix'))]",
    "skuTier": "Premium",
    "skuName": "P1V2",
    "registryLocation": "[resourceGroup().location]",
    "registrySku": "Standard",
    "startupCommand": "",
    "appInsightsName": "[concat('ai-', variables('suffix'))]",
    "appInsightsLocation": "[resourceGroup().location]",
    "appInsightsKeyName": "app-insights",
    "dockerRegistryKeyName": "docker-registry",
    "dockerRegistryUserKeyName": "docker-registry-user",
    "dockerRegistryPasswordKeyName": "docker-registry-password",
    "keyVaultLocation": "[resourceGroup().location]",
    "serviceBusLocation": "[resourceGroup().location]",
    "serviceBusTier": "Standard",
    "serviceBusCapacity": 2,
    "eventHubName": "eh-sample-topic",
    "eventHubPartitionCount": 32,
    "eventHubAuthName": "listen-and-send",
    "eventHubConnectionKeyName": "event-hub-connection"
  },
  "resources": [
    {
      "type": "Microsoft.Web/sites",
      "name": "[variables('webAppName')]",
      "apiVersion": "2018-11-01",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "resources": [
        {
          "type": "config",
          "name": "appsettings",
          "apiVersion": "2018-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('webAppName'))]",
            "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
            "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appInsightsKeyName'))]",
            "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('eventHubConnectionKeyName'))]"
          ],
          "properties": {
            "DOCKER_REGISTRY_SERVER_URL": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('dockerRegistryKeyName'))).secretUriWithVersion, ')')]",
            "DOCKER_REGISTRY_SERVER_USERNAME": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('dockerRegistryUserKeyName'))).secretUriWithVersion, ')')]",
            "DOCKER_REGISTRY_SERVER_PASSWORD": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('dockerRegistryPasswordKeyName'))).secretUriWithVersion, ')')]",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appInsightsKeyName'))).secretUriWithVersion, ')')]",
            "KAFKA_CONNECTION_KEY": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('eventHubConnectionKeyName'))).secretUriWithVersion, ')')]",
            "KAFKA_ENDPOINT": "[concat(variables('serviceBusName'), '.servicebus.windows.net:9093')]",
            "KAFKA_TOPIC": "[variables('eventHubName')]",
            "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "false",
            "WEBSITES_PORT": "8080"
          }
        }
      ],
      "properties": {
        "name": "[variables('webAppName')]",
        "siteConfig": {
          "appCommandLine": "[variables('startupCommand')]",
          "linuxFxVersion": "[concat('DOCKER|', reference(concat('Microsoft.ContainerRegistry/registries/', variables('registryName'))).loginServer, '/', parameters('imageName'))]",
          "httpLoggingEnabled": true,
          "logsDirectorySizeLimit": 35,
          "alwaysOn": true
        },
        "serverFarmId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
        "hostingEnvironment": ""
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Insights/components/', variables('appInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2019-05-01",
      "sku": {
        "name": "[variables('registrySku')]"
      },
      "name": "[variables('registryName')]",
      "location": "[variables('registryLocation')]",
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "Tier": "[variables('skuTier')]",
        "Name": "[variables('skuName')]"
      },
      "kind": "linux",
      "name": "[variables('hostingPlanName')]",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "workerSizeId": "0",
        "reserved": true,
        "numberOfWorkers": 1,
        "httpsOnly": "true",
        "hostingEnvironment": ""
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "name": "[variables('appInsightsName')]",
      "apiVersion": "2014-04-01",
      "location": "[variables('appInsightsLocation')]",
      "kind": "java",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webAppName'))]": "Resource"
      },
      "properties": {
        "applicationId": "[variables('webAppName')]",
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2018-01-01-preview",
      "name": "[variables('serviceBusName')]",
      "location": "[variables('serviceBusLocation')]",
      "sku": {
        "name": "[variables('serviceBusTier')]",
        "tier": "[variables('serviceBusTier')]",
        "capacity": "[variables('serviceBusCapacity')]"
      },
      "properties": {
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2017-04-01",
      "name": "[concat(variables('serviceBusName'), '/', variables('eventHubName'))]",
      "location": "[variables('serviceBusLocation')]",
      "dependsOn": [
          "[resourceId('Microsoft.EventHub/namespaces', variables('serviceBusName'))]"
      ],
      "properties": {
          "messageRetentionInDays": 1,
          "partitionCount": "[variables('eventHubPartitionCount')]",
          "status": "Active"
      },
      "resources": [
        {
          "type": "authorizationRules",
          "apiVersion": "2017-04-01",
          "name": "[variables('eventHubAuthName')]",
          "dependsOn": [
            "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('serviceBusName'), variables('eventHubName'))]"
          ],
          "properties": {
            "rights": [
              "Send", "Listen"
            ]
          }
        }
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultName')]",
      "apiVersion": "2015-06-01",
      "location": "[variables('keyVaultLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
      ],
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "tenantId": "[subscription().tenantId]",
        "enabledForTemplateDeployment": true,
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites/', variables('webAppName')), '2018-02-01', 'Full').identity.principalId]",
            "permissions": {
              "secrets": [ "get" ]
            }
          }
        ]
      },
      "resources": [
        {
          "type": "secrets",
          "name": "[variables('appInsightsKeyName')]",
          "apiVersion": "2015-06-01",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
            "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
          ],
          "properties": {
            "value": "[reference(resourceId('Microsoft.Insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
          }
        },
        {
          "type": "secrets",
          "name": "[variables('eventHubConnectionKeyName')]",
          "apiVersion": "2015-06-01",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
            "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('serviceBusName'), variables('eventHubName'))]"
          ],
          "properties": {
            "value": "[listkeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', variables('serviceBusName'), variables('eventHubName'), variables('eventHubAuthName')), '2017-04-01').primaryConnectionString]"
          }
        },
        {
          "type": "secrets",
          "name": "[variables('dockerRegistryKeyName')]",
          "apiVersion": "2015-06-01",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
          ],
          "properties": {
            "value": "[concat('https://', reference(concat('Microsoft.ContainerRegistry/registries/', variables('registryName'))).loginServer)]"
          }
        },
        {
          "type": "secrets",
          "name": "[variables('dockerRegistryUserKeyName')]",
          "apiVersion": "2015-06-01",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
          ],
          "properties": {
            "value": "[listCredentials(concat('Microsoft.ContainerRegistry/registries/', variables('registryName')), '2017-10-01').username]"
          }
        },
        {
          "type": "secrets",
          "name": "[variables('dockerRegistryPasswordKeyName')]",
          "apiVersion": "2015-06-01",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
          ],
          "properties": {
            "value": "[listCredentials(concat('Microsoft.ContainerRegistry/registries/', variables('registryName')), '2017-10-01').passwords[0].value]"
          }
        }
      ]
    }
  ],
  "outputs": {
    "webAppHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('webAppName')), '2018-02-01').defaultHostName]"
    }
  }
}
